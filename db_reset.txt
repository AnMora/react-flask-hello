pipenv run reset_db

@@@@@@@@@@@@@@@favorite methods tested@@@@@@@@@@@@
https://codeshare.io/GqgdNx
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Apunte de flux para backend_url
`${process.env.BACKEND_URL}/favorites`




################################FAVORITE FUNCTIONS#########TESTED######
            deleteFavorites: async fav_id => {
				const res = await fetch(`https://3001-apricot-tahr-nih1bqo0.ws-us03.gitpod.io/favorite/${fav_id}`, {
					method: "DELETE",
					headers: {
						"Content-Type": "application/json",
						Authorization: `Bearer ${store.jwtoken}`
					}
				});
				const info = await res.json(); //traemos data del fetch
				console.log(info);
				const delFav = getStore().favorites;
				const existingFav = delFav.filter(i => i.cocktail_id !== fav_id);
				setStore({ favorites: [...existingFav] });
			},
######################################################################################
			deleteFavoritez: async fav_id => {
				const store = getStore();
				const drinkIndex = store.favorites.findIndex(i => i.cocktail_id == fav_id);
				console.log("####$: ", drinkIndex);
				let favID = await store.favorites[drinkIndex].id;
				console.log("ID: ", favId);
				if (drinkIndex != -1) {
					fetch(`https://3001-apricot-tahr-nih1bqo0.ws-us03.gitpod.io/favorites/${favID}`, {
						method: "DELETE"
					}).then(() => getActions().getUserFavorites(store.sessionUID));
				}
			},
#######################################################################################
			deleteFavoritex: id => {
				const store = getStore();
				const FavList = store.favorites.filter((item, f) => id != f);
				setStore({ favorites: [...FavList] });
			},
#######################################################################################
			deleteFavoritess: async fav_id => {
				const res = await fetch(`https://3001-apricot-tahr-nih1bqo0.ws-us03.gitpod.io/favorite/${fav_id}`, {
					method: "DELETE"
				});
				const info = await res.json(); //traemos data del fetch
				console.log(info);
				const delFav = getStore().favorites;
				const existingFav = delFav.filter(i => i.cocktail_id !== fav_id);
				setStore({ favorites: [...existingFav] });
			}